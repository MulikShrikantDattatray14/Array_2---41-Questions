var nextPermutation = function(nums) {
    
function nextGreaterPermutation(A) {
  let n = A.length; // size of the array.

  // Step 1: Find the break point:
  let ind = -1; // break point
  for (let i = n - 2; i >= 0; i--) {
    if (A[i] < A[i + 1]) {
      // index i is the break point
      ind = i;
      break;
    }
  }

  // If break point does not exist:
  if (ind == -1) {
    // reverse the whole array:
    A.reverse();
    return A;
  }

  // Step 2: Find the next greater element
  //         and swap it with A[ind]:

  for (let i = n - 1; i > ind; i--) {
    if (A[i] > A[ind]) {
      [A[i], A[ind]] = [A[ind], A[i]]; // swap A[i] and A[ind]
      break;
    }
  }

  // Step 3: reverse the right half:

  const reversedSlice = A.slice(ind + 1).reverse();
  // console.log(reversedSlice)
  let j=0;
  for (let i = ind + 1; i < A.length; i++) {
    A[i]=reversedSlice[j];
    j++;
  }
 // A.splice(ind + 1, n - ind - 1, ...reversedSlice);

  return A;
}

let A =nums
let ans = nextGreaterPermutation(A);

return  ans.join(" ") 

};