https://www.youtube.com/watch?v=XZ6ZL1Qg6og

Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.
 

function intersection(nums1, nums2) {
    const map = new Map();
    const result = [];

    // Create a hash map to store the frequency of each element in nums1
    for (const num of nums1) {
        map.set(num, (map.get(num) || 0) + 1);
    }

    // Check each element in nums2 against the hash map
    for (const num of nums2) {
        if (map.has(num) && map.get(num) > 0) {
            result.push(num);
            map.set(num, map.get(num) - 1);
        }
    }

    return result;
}

// Example 1
const nums1_1 = [1, 2, 2, 1];
const nums2_1 = [2, 2];
console.log(intersection(nums1_1, nums2_1)); // Output: [2]

// Example 2
const nums1_2 = [4, 9, 5];
const nums2_2 = [9, 4, 9, 8, 4];
console.log(intersection(nums1_2, nums2_2)); // Output: [9, 4]
